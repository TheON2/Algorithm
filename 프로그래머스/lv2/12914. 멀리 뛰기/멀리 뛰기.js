function solution(n) {
    // dp 배열 초기화. 각 위치에 도달하는 방법의 수를 저장할 배열입니다.
    let dp = Array(n + 1).fill(0);
    
    // 첫 번째 위치에 도달하는 방법은 1가지입니다.
    dp[1] = 1;
    
    // n이 1보다 크다면, 추가적인 계산이 필요합니다.
    if(n > 1) {
        // 두 번째 위치에 도달하는 방법은 2가지입니다.
        dp[2] = 2;
        
        // 3번째 위치부터 n번째 위치까지 각각에 도달하는 방법의 수를 계산합니다.
        for(let i = 3; i <= n; i++) {
            // i번째 위치에 도달하는 방법은 (i-1)번째에서 1칸 뛴 경우와 (i-2)번째에서 2칸 뛴 경우의 합입니다.
            // 각 단계에서 1234567로 나눈 나머지 값을 저장하여 오버플로우를 방지하고 결과 값을 계산합니다.
            dp[i] = (dp[i-1] + dp[i-2]) % 1234567;
        }
    }
    
    // n번째 위치에 도달하는 방법의 수를 반환합니다.
    return dp[n];
}
